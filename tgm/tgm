#!/usr/bin/python

import os
import json
from posixpath import expanduser
import typer

from rich.console import Console
from rich.table import Table
from rich import box

from pyfiglet import figlet_format as pyfig

console = Console()
app = typer.Typer()

def write_terminalGames(data: dict) -> None:
    with open(os.path.join(terminalGames_path, "terminalGames.json"), "w") as of:
        of.write(json.dumps(data, indent=2))

@app.command(short_help="Adds an new game to the manager")
def add(title: str, command: str) -> None:
    new_game = {"title": title, "command": command}
    terminalGames["terminalGames"].append(new_game)
    write_terminalGames(terminalGames)
    print("Added " + title +" to the manager")
    display()

@app.command(short_help="Runs the selected terminal game") 
def start(game_id: int) -> None:
    if game_id + 1 > len(terminalGames["terminalGames"]):
        print("selected game is invalid")
    else:
        selectedGame = terminalGames["terminalGames"][game_id]
        os.system(selectedGame["command"])

@app.command(short_help="Display list of terminal games")
def display():
    titleTable = Table (
        style = "#E1AD01",
        box=box.SIMPLE_HEAVY, 
    )

    titleTable.add_column(pyfig("Terminal Games"), style="#E1AD01")
    titleTable.add_column("id", style="#E1AD01")

    i = 0
    for game in terminalGames["terminalGames"]:
        titleTable.add_row(game["title"],str(i))
        i += 1

    console.print(titleTable)

@app.callback(invoke_without_command=True)
def initial():
    display()

def main():
    global terminalGames_path
    terminalGames_path = os.path.join(expanduser("~"), ".config", "TerminalGameManager")
    if not os.path.exists(terminalGames_path):
        os.makedirs(terminalGames_path)
        tg = {}
        tg["terminalGames"] = []
        write_terminalGames(tg)

    tg_file = open(os.path.join(terminalGames_path, "terminalGames.json"))
    global terminalGames
    terminalGames = json.load(tg_file)


    app()

main()